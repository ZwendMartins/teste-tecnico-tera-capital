# -*- coding: utf-8 -*-
"""analise3

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1y5ReHoQLqZ1Oulrzs1PdcYCPyxY1ThnJ

**Fazer programa rodar na linha de comando**
"""

import sys                               # importa o módulo sys, que permite interagir com o sistema e ler argumentos da linha de comando.
import pandas as pd

# Verifica o ano informado
if len(sys.argv) != 2:                   # conta quantos itens foram passados. Se não tiver 2 itens (o nome do script + o ano), o programa mostra a mensagem de uso correto e encerra.
    print("Uso: python analise.py {ano de 2010 a 2025}")
    exit()

try:
    ano = int(sys.argv[1])              # pega o primeiro argumento passado pelo usuário, que deve ser o ano.

except ValueError:                      # se o usuário digitar algo que não é número, o programa mostra mensagem de erro e encerra.
    print("Ano inválido! Digite um número entre 2010 e 2025.")
    exit()

if not (2010 <= ano <= 2025):
    print("Ano inválido! Digite um número entre 2010 e 2025.")
    exit()

# Dados da carteira
investimentos = {
    "Alemanha": {"Investimento": 3678905.67, "Taxa": 0.035, "Codigo": 222},
    "Brasil": {"Investimento": 15734123.72, "Taxa": 0.13, "Codigo": None},
    "EUA": {"Investimento": 356789.02, "Taxa": 0.0238, "Codigo": 61},
    "Japão": {"Investimento": 5402346.70, "Taxa": 0.0005, "Codigo": 101},
    "Reino Unido": {"Investimento": 2457738.51, "Taxa": 0.03, "Codigo": 115}
}

# Cálculo dos retornos
resultados = []
total_inicial = 0
total_retorno_brl = 0
total_retorno_usd = 0

for pais, info in investimentos.items():
    capital_inicial = info["Investimento"]
    taxa = info["Taxa"]
    anos_desde_2010 = ano - 2010

    total_inicial += capital_inicial

    montante_ano = capital_inicial * (1 + taxa) ** anos_desde_2010
    montante_ano_anterior = capital_inicial * (1 + taxa) ** (anos_desde_2010 - 1)

    retorno_ano = montante_ano - montante_ano_anterior
    retorno_percentual = (retorno_ano / montante_ano_anterior) * 100

    if pais == "Brasil" or info.get("Codigo") is None:
        retorno_brl = retorno_ano
        retorno_usd = retorno_ano
    else:
        codigo = info["Codigo"]
        url = f"https://ptax.bcb.gov.br/ptax_internet/consultaBoletim.do?method=gerarCSVFechamentoMoedaNoPeriodo&ChkMoeda={codigo}&DATAINI=01/01/{ano}&DATAFIM=07/01/{ano}"
        df = pd.read_csv(url,
                         sep=';',
                         header=None,
                         usecols=[0,4,6],
                         names=['Data','Taxa','Paridade'],
                         encoding='latin1')

        taxa_compra = float(str(df.loc[0,'Taxa']).replace('.','').replace(',','.'))
        paridade = float(str(df.loc[0,'Paridade']).replace('.','').replace(',','.'))

        retorno_brl = retorno_ano * taxa_compra
        retorno_usd = retorno_ano / paridade

    total_retorno_brl += retorno_brl
    total_retorno_usd += retorno_usd

    resultados.append({
        "Título": pais,
        "Retorno em Real (%)": round(retorno_percentual,2),
        "Retorno em Dólar (%)": round(retorno_percentual,2),
        "Retorno em Real (R$)": round(retorno_brl,2),
        "Retorno em Dólar (US$)": round(retorno_usd,2)
    })

df_final = pd.DataFrame(resultados)
print("\n==== Tabela final de retornos ====")         # substitui display por print, porque não roda na linha de comando.
print(df_final.to_string(index=False))                # index=False - remove a coluna de índices padrão.